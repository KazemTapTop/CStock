//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CStock.tsePublic {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tsetmc.com/", ConfigurationName="tsePublic.TsePublicSoap")]
    public interface TsePublicSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Board", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Board(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Board", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BoardAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardTradeLastDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BoardTradeLastDay(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardTradeLastDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BoardTradeLastDayAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardTradeOneDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BoardTradeOneDay(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardTradeOneDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BoardTradeOneDayAsync(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardInstList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BoardInstList(string UserName, string Password, string CComVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardInstList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BoardInstListAsync(string UserName, string Password, string CComVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardActivityDaily", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BoardActivityDaily(string UserName, string Password, int DateFrom, int DateTo, string CComVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BoardActivityDaily", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BoardActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo, string CComVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Sector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Sector(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Sector", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectorAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SubSector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SubSector(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SubSector", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SubSectorAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorTradeLastDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SectorTradeLastDay(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorTradeLastDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectorTradeLastDayAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorTradeOneDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SectorTradeOneDay(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorTradeOneDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectorTradeOneDayAsync(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorInstList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SectorInstList(string UserName, string Password, string CSecVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorInstList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectorInstListAsync(string UserName, string Password, string CSecVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorActivityDaily", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SectorActivityDaily(string UserName, string Password, int DateFrom, int DateTo, string CSecVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/SectorActivityDaily", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectorActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo, string CSecVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeLastDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TradeLastDay(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeLastDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TradeLastDayAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeOneDay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TradeOneDay(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeOneDay", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TradeOneDayAsync(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeOneDayAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TradeOneDayAll(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TradeOneDayAll", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TradeOneDayAllAsync(string UserName, string Password, int SelDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstTrade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstTrade(string UserName, string Password, long Inscode, int DateFrom, int DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstTrade", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstTradeAsync(string UserName, string Password, long Inscode, int DateFrom, int DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketActivityDaily", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MarketActivityDaily(string UserName, string Password, int DateFrom, int DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketActivityDaily", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MarketActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BestLimitsAllIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BestLimitsAllIns(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BestLimitsAllIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BestLimitsAllInsAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BestLimitOneIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BestLimitOneIns(string UserName, string Password, long InsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/BestLimitOneIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BestLimitOneInsAsync(string UserName, string Password, long InsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstWithBestLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstWithBestLimit(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstWithBestLimit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstWithBestLimitAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Instrument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Instrument(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Instrument", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentFilterByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentFilterByDate(string UserName, string Password, int DEven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentFilterByDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentFilterByDateAsync(string UserName, string Password, int DEven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Company", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Company(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Company", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CompanyAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentDetailOneIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentDetailOneIns(string UserName, string Password, string CIsin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentDetailOneIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentDetailOneInsAsync(string UserName, string Password, string CIsin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentDetailAllIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentDetailAllIns(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentDetailAllIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentDetailAllInsAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/StateType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet StateType(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/StateType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> StateTypeAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentStateDescOneIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentStateDescOneIns(string UserName, string Password, long InsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentStateDescOneIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentStateDescOneInsAsync(string UserName, string Password, long InsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentsStateDescAllIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentsStateDescAllIns(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentsStateDescAllIns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentsStateDescAllInsAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentsState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstrumentsState(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstrumentsState", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstrumentsStateAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB1LastDayLastData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IndexB1LastDayLastData(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB1LastDayLastData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> IndexB1LastDayLastDataAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB1LastDayOneInst", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IndexB1LastDayOneInst(string UserName, string Password, long IdxCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB1LastDayOneInst", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> IndexB1LastDayOneInstAsync(string UserName, string Password, long IdxCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IndexB2(string UserName, string Password, int DEven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexB2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> IndexB2Async(string UserName, string Password, int DEven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexInstrument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IndexInstrument(string UserName, string Password, long IdxCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/IndexInstrument", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> IndexInstrumentAsync(string UserName, string Password, long IdxCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstAffect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InstAffect(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/InstAffect", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InstAffectAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TOP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TOP(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/TOP", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TOPAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Msg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Msg(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/Msg", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MsgAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/StaticThresholds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet StaticThresholds(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/StaticThresholds", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> StaticThresholdsAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal MarketValue(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketValue", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> MarketValueAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketValueByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal MarketValueByDate(string UserName, string Password, int DEven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tsetmc.com/MarketValueByDate", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> MarketValueByDateAsync(string UserName, string Password, int DEven);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TsePublicSoapChannel : CStock.tsePublic.TsePublicSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TsePublicSoapClient : System.ServiceModel.ClientBase<CStock.tsePublic.TsePublicSoap>, CStock.tsePublic.TsePublicSoap {
        
        public TsePublicSoapClient() {
        }
        
        public TsePublicSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TsePublicSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TsePublicSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TsePublicSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Board(string UserName, string Password) {
            return base.Channel.Board(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BoardAsync(string UserName, string Password) {
            return base.Channel.BoardAsync(UserName, Password);
        }
        
        public System.Data.DataSet BoardTradeLastDay(string UserName, string Password) {
            return base.Channel.BoardTradeLastDay(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BoardTradeLastDayAsync(string UserName, string Password) {
            return base.Channel.BoardTradeLastDayAsync(UserName, Password);
        }
        
        public System.Data.DataSet BoardTradeOneDay(string UserName, string Password, int SelDate) {
            return base.Channel.BoardTradeOneDay(UserName, Password, SelDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BoardTradeOneDayAsync(string UserName, string Password, int SelDate) {
            return base.Channel.BoardTradeOneDayAsync(UserName, Password, SelDate);
        }
        
        public System.Data.DataSet BoardInstList(string UserName, string Password, string CComVal) {
            return base.Channel.BoardInstList(UserName, Password, CComVal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BoardInstListAsync(string UserName, string Password, string CComVal) {
            return base.Channel.BoardInstListAsync(UserName, Password, CComVal);
        }
        
        public System.Data.DataSet BoardActivityDaily(string UserName, string Password, int DateFrom, int DateTo, string CComVal) {
            return base.Channel.BoardActivityDaily(UserName, Password, DateFrom, DateTo, CComVal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BoardActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo, string CComVal) {
            return base.Channel.BoardActivityDailyAsync(UserName, Password, DateFrom, DateTo, CComVal);
        }
        
        public System.Data.DataSet Sector(string UserName, string Password) {
            return base.Channel.Sector(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectorAsync(string UserName, string Password) {
            return base.Channel.SectorAsync(UserName, Password);
        }
        
        public System.Data.DataSet SubSector(string UserName, string Password) {
            return base.Channel.SubSector(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SubSectorAsync(string UserName, string Password) {
            return base.Channel.SubSectorAsync(UserName, Password);
        }
        
        public System.Data.DataSet SectorTradeLastDay(string UserName, string Password) {
            return base.Channel.SectorTradeLastDay(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectorTradeLastDayAsync(string UserName, string Password) {
            return base.Channel.SectorTradeLastDayAsync(UserName, Password);
        }
        
        public System.Data.DataSet SectorTradeOneDay(string UserName, string Password, int SelDate) {
            return base.Channel.SectorTradeOneDay(UserName, Password, SelDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectorTradeOneDayAsync(string UserName, string Password, int SelDate) {
            return base.Channel.SectorTradeOneDayAsync(UserName, Password, SelDate);
        }
        
        public System.Data.DataSet SectorInstList(string UserName, string Password, string CSecVal) {
            return base.Channel.SectorInstList(UserName, Password, CSecVal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectorInstListAsync(string UserName, string Password, string CSecVal) {
            return base.Channel.SectorInstListAsync(UserName, Password, CSecVal);
        }
        
        public System.Data.DataSet SectorActivityDaily(string UserName, string Password, int DateFrom, int DateTo, string CSecVal) {
            return base.Channel.SectorActivityDaily(UserName, Password, DateFrom, DateTo, CSecVal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectorActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo, string CSecVal) {
            return base.Channel.SectorActivityDailyAsync(UserName, Password, DateFrom, DateTo, CSecVal);
        }
        
        public System.Data.DataSet TradeLastDay(string UserName, string Password) {
            return base.Channel.TradeLastDay(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TradeLastDayAsync(string UserName, string Password) {
            return base.Channel.TradeLastDayAsync(UserName, Password);
        }
        
        public System.Data.DataSet TradeOneDay(string UserName, string Password, int SelDate) {
            return base.Channel.TradeOneDay(UserName, Password, SelDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TradeOneDayAsync(string UserName, string Password, int SelDate) {
            return base.Channel.TradeOneDayAsync(UserName, Password, SelDate);
        }
        
        public System.Data.DataSet TradeOneDayAll(string UserName, string Password, int SelDate) {
            return base.Channel.TradeOneDayAll(UserName, Password, SelDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TradeOneDayAllAsync(string UserName, string Password, int SelDate) {
            return base.Channel.TradeOneDayAllAsync(UserName, Password, SelDate);
        }
        
        public System.Data.DataSet InstTrade(string UserName, string Password, long Inscode, int DateFrom, int DateTo) {
            return base.Channel.InstTrade(UserName, Password, Inscode, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstTradeAsync(string UserName, string Password, long Inscode, int DateFrom, int DateTo) {
            return base.Channel.InstTradeAsync(UserName, Password, Inscode, DateFrom, DateTo);
        }
        
        public System.Data.DataSet MarketActivityDaily(string UserName, string Password, int DateFrom, int DateTo) {
            return base.Channel.MarketActivityDaily(UserName, Password, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MarketActivityDailyAsync(string UserName, string Password, int DateFrom, int DateTo) {
            return base.Channel.MarketActivityDailyAsync(UserName, Password, DateFrom, DateTo);
        }
        
        public System.Data.DataSet BestLimitsAllIns(string UserName, string Password) {
            return base.Channel.BestLimitsAllIns(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BestLimitsAllInsAsync(string UserName, string Password) {
            return base.Channel.BestLimitsAllInsAsync(UserName, Password);
        }
        
        public System.Data.DataSet BestLimitOneIns(string UserName, string Password, long InsCode) {
            return base.Channel.BestLimitOneIns(UserName, Password, InsCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BestLimitOneInsAsync(string UserName, string Password, long InsCode) {
            return base.Channel.BestLimitOneInsAsync(UserName, Password, InsCode);
        }
        
        public System.Data.DataSet InstWithBestLimit(string UserName, string Password) {
            return base.Channel.InstWithBestLimit(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstWithBestLimitAsync(string UserName, string Password) {
            return base.Channel.InstWithBestLimitAsync(UserName, Password);
        }
        
        public System.Data.DataSet Instrument(string UserName, string Password) {
            return base.Channel.Instrument(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentAsync(string UserName, string Password) {
            return base.Channel.InstrumentAsync(UserName, Password);
        }
        
        public System.Data.DataSet InstrumentFilterByDate(string UserName, string Password, int DEven) {
            return base.Channel.InstrumentFilterByDate(UserName, Password, DEven);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentFilterByDateAsync(string UserName, string Password, int DEven) {
            return base.Channel.InstrumentFilterByDateAsync(UserName, Password, DEven);
        }
        
        public System.Data.DataSet Company(string UserName, string Password) {
            return base.Channel.Company(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CompanyAsync(string UserName, string Password) {
            return base.Channel.CompanyAsync(UserName, Password);
        }
        
        public System.Data.DataSet InstrumentDetailOneIns(string UserName, string Password, string CIsin) {
            return base.Channel.InstrumentDetailOneIns(UserName, Password, CIsin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentDetailOneInsAsync(string UserName, string Password, string CIsin) {
            return base.Channel.InstrumentDetailOneInsAsync(UserName, Password, CIsin);
        }
        
        public System.Data.DataSet InstrumentDetailAllIns(string UserName, string Password) {
            return base.Channel.InstrumentDetailAllIns(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentDetailAllInsAsync(string UserName, string Password) {
            return base.Channel.InstrumentDetailAllInsAsync(UserName, Password);
        }
        
        public System.Data.DataSet StateType(string UserName, string Password) {
            return base.Channel.StateType(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> StateTypeAsync(string UserName, string Password) {
            return base.Channel.StateTypeAsync(UserName, Password);
        }
        
        public System.Data.DataSet InstrumentStateDescOneIns(string UserName, string Password, long InsCode) {
            return base.Channel.InstrumentStateDescOneIns(UserName, Password, InsCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentStateDescOneInsAsync(string UserName, string Password, long InsCode) {
            return base.Channel.InstrumentStateDescOneInsAsync(UserName, Password, InsCode);
        }
        
        public System.Data.DataSet InstrumentsStateDescAllIns(string UserName, string Password) {
            return base.Channel.InstrumentsStateDescAllIns(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentsStateDescAllInsAsync(string UserName, string Password) {
            return base.Channel.InstrumentsStateDescAllInsAsync(UserName, Password);
        }
        
        public System.Data.DataSet InstrumentsState(string UserName, string Password) {
            return base.Channel.InstrumentsState(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstrumentsStateAsync(string UserName, string Password) {
            return base.Channel.InstrumentsStateAsync(UserName, Password);
        }
        
        public System.Data.DataSet IndexB1LastDayLastData(string UserName, string Password) {
            return base.Channel.IndexB1LastDayLastData(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> IndexB1LastDayLastDataAsync(string UserName, string Password) {
            return base.Channel.IndexB1LastDayLastDataAsync(UserName, Password);
        }
        
        public System.Data.DataSet IndexB1LastDayOneInst(string UserName, string Password, long IdxCode) {
            return base.Channel.IndexB1LastDayOneInst(UserName, Password, IdxCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> IndexB1LastDayOneInstAsync(string UserName, string Password, long IdxCode) {
            return base.Channel.IndexB1LastDayOneInstAsync(UserName, Password, IdxCode);
        }
        
        public System.Data.DataSet IndexB2(string UserName, string Password, int DEven) {
            return base.Channel.IndexB2(UserName, Password, DEven);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> IndexB2Async(string UserName, string Password, int DEven) {
            return base.Channel.IndexB2Async(UserName, Password, DEven);
        }
        
        public System.Data.DataSet IndexInstrument(string UserName, string Password, long IdxCode) {
            return base.Channel.IndexInstrument(UserName, Password, IdxCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> IndexInstrumentAsync(string UserName, string Password, long IdxCode) {
            return base.Channel.IndexInstrumentAsync(UserName, Password, IdxCode);
        }
        
        public System.Data.DataSet InstAffect(string UserName, string Password) {
            return base.Channel.InstAffect(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InstAffectAsync(string UserName, string Password) {
            return base.Channel.InstAffectAsync(UserName, Password);
        }
        
        public System.Data.DataSet TOP(string UserName, string Password) {
            return base.Channel.TOP(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TOPAsync(string UserName, string Password) {
            return base.Channel.TOPAsync(UserName, Password);
        }
        
        public System.Data.DataSet Msg(string UserName, string Password) {
            return base.Channel.Msg(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MsgAsync(string UserName, string Password) {
            return base.Channel.MsgAsync(UserName, Password);
        }
        
        public System.Data.DataSet StaticThresholds(string UserName, string Password) {
            return base.Channel.StaticThresholds(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> StaticThresholdsAsync(string UserName, string Password) {
            return base.Channel.StaticThresholdsAsync(UserName, Password);
        }
        
        public decimal MarketValue(string UserName, string Password) {
            return base.Channel.MarketValue(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<decimal> MarketValueAsync(string UserName, string Password) {
            return base.Channel.MarketValueAsync(UserName, Password);
        }
        
        public decimal MarketValueByDate(string UserName, string Password, int DEven) {
            return base.Channel.MarketValueByDate(UserName, Password, DEven);
        }
        
        public System.Threading.Tasks.Task<decimal> MarketValueByDateAsync(string UserName, string Password, int DEven) {
            return base.Channel.MarketValueByDateAsync(UserName, Password, DEven);
        }
    }
}
